package com.caritas.controller;

import com.caritas.controller.util.noRowController.NoRowControlable;
import com.caritas.entity.Articulos;
import com.caritas.facade.ArticulosFacade;
import java.util.List;
import java.util.Map;
import javax.annotation.PostConstruct;
import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.ViewScoped;
import org.primefaces.model.LazyDataModel;
import org.primefaces.model.SortOrder;

/**
 *
 * @author software
 */
@ManagedBean
@ViewScoped
public class ArticulosList implements NoRowControlable {

    @EJB
    private ArticulosFacade articulos;
    private Articulos selected;
    private LazyDataModel<Articulos> items = new LazyDataModel<Articulos>() {
        @Override
        public List<Articulos> load(int first, int pageSize, String sortField, SortOrder sortOrder, Map<String, String> filters) {
            return articulos.findRange(new int[]{first, first + pageSize});
        }
    };

    public ArticulosList() {
    }

    @PostConstruct
    private void initialize() {
        items.setRowCount(articulos.count());
    }

    public LazyDataModel<Articulos> getItems() {
        return items;
    }

    public Articulos getSelected() {
        return selected;
    }

    public void setSelected(Articulos selected) {
        this.selected = selected;
    }

    @Override
    public String prepareList() {
        return "List";
    }

    @Override
    public String prepareViewNoRow() {
        return "View";
    }

    @Override
    public String prepareEditNoRow() {
        return "Edit";
    }

    @Override
    public String destroyNoRow() {
        if (articulos.find(selected) != null) {
            articulos.remove(selected);
        }
        return null;
    }

    public String create() {
        return "Create";
    }

    @ManagedBean(name = "articulosCompleter")
    @ViewScoped
    public static class ArticulosCompleter {

        @ManagedProperty("#{parametersController.suggestionLength}")
        private int length;
        @EJB
        private ArticulosFacade articulos;

        public List<Articulos> complete(String query) {
            return articulos.findLike(query, length);
        }

        public void setLength(int length) {
            this.length = length;
        }
    }
}
